#!/usr/bin/env ruby
# == Applies all pending database upgrade scripts to the specified database. All pending SQL scripts are
#    sorted by the timestamp assigned at the time the script was added
#
# == Usage
#  sem-apply --url <database url>
#  or
#  sem-apply --host <database host> --user <db user> --name <db name>
#
# == Examples
#  sem-apply --url postgresql://postgres@localhost/sample_development
#  sem-apply --host localhost --user web --name test
#

load File.join(File.dirname(__FILE__), 'sem-config')

args = SchemaEvolutionManager::Args.from_stdin(:optional => %w(url host port name user dry_run))

db = SchemaEvolutionManager::Db.from_args(args)
db.bootstrap!

dry_run = args.dry_run.nil? ? false : args.dry_run

util = SchemaEvolutionManager::ApplyUtil.new(db, :dry_run => dry_run)

puts "Upgrading schema for #{db.url}"

begin
  count = util.apply!("./scripts")
  if count == 0
    puts "  All scripts have been previously applied"
  end
rescue SchemaEvolutionManager::ScriptError => e
  puts ""
  puts "ERROR applying script: %s" % e.filename
  puts ""
  puts "If this script has previously been applied to this database, you can record it as having been applied by:"
  puts "  " + e.dml
  puts ""
  exit(1)
end
